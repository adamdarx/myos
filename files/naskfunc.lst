     1 00000000                                 [FORMAT "WCOFF"]    ; 制作目标文件的格式
     2 00000000                                 [INSTRSET "i486p"]  ; 使用到486为止的指令
     3 00000000                                 [BITS 32]           ; 制作32位模式对应的机械语言
     4 00000000                                 
     5 00000000                                 [FILE "naskfunc.nas"]        ; 源文件名
     6 00000000                                     GLOBAL _io_hlt, _io_cli, _io_sti, _io_stihlt
     7 00000000                                     GLOBAL _io_in8, _io_in16, _io_in32
     8 00000000                                     GLOBAL _io_out8, _io_out16, _io_out32
     9 00000000                                     GLOBAL _io_load_eflags, _io_store_eflags
    10 00000000                                     GLOBAL _load_gdtr, _load_idtr
    11 00000000                                 
    12                                          [SECTION .text]    ; 以下是函数本体
    13 00000000                                 _io_hlt:
    14 00000000 F4                                  HLT
    15 00000001 C3                                  RET
    16 00000002                                 
    17 00000002                                 _io_cli:
    18 00000002 FA                                  CLI
    19 00000003 C3                                  RET
    20 00000004                                 
    21 00000004                                 _io_sti:
    22 00000004 FB                                  STI
    23 00000005 C3                                  RET
    24 00000006                                 
    25 00000006                                 _io_stihlt:
    26 00000006 FB                                  STI
    27 00000007 F4                                  HLT
    28 00000008 C3                                  RET
    29 00000009                                     
    30 00000009                                 _io_in8:
    31 00000009 8B 54 24 04                         MOV EDX, [ESP+4]
    32 0000000D B8 00000000                         MOV EAX, 0
    33 00000012 EC                                  IN  AL, DX
    34 00000013 C3                                  RET
    35 00000014                                 
    36 00000014                                 _io_in16:
    37 00000014 8B 54 24 04                         MOV EDX, [ESP+4]
    38 00000018 B8 00000000                         MOV EAX, 0
    39 0000001D 66 ED                               IN  AX, DX
    40 0000001F C3                                  RET
    41 00000020                                 
    42 00000020                                 _io_in32:
    43 00000020 8B 54 24 04                         MOV EDX, [ESP+4]
    44 00000024 B8 00000000                         MOV EAX, 0
    45 00000029 ED                                  IN  EAX, DX
    46 0000002A C3                                  RET
    47 0000002B                                 
    48 0000002B                                 _io_out8:
    49 0000002B 8B 54 24 04                         MOV EDX, [ESP+4]
    50 0000002F 8A 44 24 08                         MOV AL, [ESP+8]
    51 00000033 EE                                  OUT DX, AL
    52 00000034 C3                                  RET
    53 00000035                                 
    54 00000035                                 _io_out16:
    55 00000035 8B 54 24 04                         MOV EDX, [ESP+4]
    56 00000039 66 8B 44 24 08                      MOV AX, [ESP+8]
    57 0000003E 66 EF                               OUT DX, AX
    58 00000040 C3                                  RET
    59 00000041                                 
    60 00000041                                 _io_out32:
    61 00000041 8B 54 24 04                         MOV EDX, [ESP+4]
    62 00000045 8B 44 24 08                         MOV EAX, [ESP+8]
    63 00000049 EF                                  OUT DX, EAX
    64 0000004A C3                                  RET
    65 0000004B                                 
    66 0000004B                                 _io_load_eflags:
    67 0000004B 9C                                  PUSHFD
    68 0000004C 58                                  POP EAX
    69 0000004D C3                                  RET
    70 0000004E                                 
    71 0000004E                                 _io_store_eflags:
    72 0000004E 8B 44 24 04                         MOV EAX, [ESP+4]
    73 00000052 50                                  PUSH EAX
    74 00000053 9D                                  POPFD
    75 00000054 C3                                  RET
    76 00000055                                 
    77 00000055                                 _load_gdtr:
    78 00000055 66 8B 44 24 04                  		MOV		AX,[ESP+4]
    79 0000005A 66 89 44 24 06                  		MOV		[ESP+6],AX
    80 0000005F 0F 01 54 24 06                  		LGDT	[ESP+6]
    81 00000064 C3                              		RET
    82 00000065                                 
    83 00000065                                 _load_idtr:
    84 00000065 66 8B 44 24 04                  		MOV		AX,[ESP+4]
    85 0000006A 66 89 44 24 06                  		MOV		[ESP+6],AX
    86 0000006F 0F 01 5C 24 06                  		LIDT	[ESP+6]
    87 00000074 C3                              		RET
